<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Collectors on Metamorph Hacks</title>
    <link>https://sschuepbach.github.io/metamorph-hacks/collectors/</link>
    <description>Recent content in Collectors on Metamorph Hacks</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-ch</language>
    <lastBuildDate>Fri, 10 Aug 2018 22:23:00 +0200</lastBuildDate>
    
	<atom:link href="https://sschuepbach.github.io/metamorph-hacks/collectors/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Übersicht collectors</title>
      <link>https://sschuepbach.github.io/metamorph-hacks/collectors/uebersicht/</link>
      <pubDate>Fri, 10 Aug 2018 22:23:00 +0200</pubDate>
      
      <guid>https://sschuepbach.github.io/metamorph-hacks/collectors/uebersicht/</guid>
      <description>Mithilfe von collectors können Werte verschiedener Literalen aggregiert, gefiltert oder zusammengefasst werden. Fast alle von ihnen teilen sich zwei Eigenschaften:
 Der Zeitpunkt und die Art der Emission ihrer Werte ist steuerbar. Es ist möglich, sie nur dann auszuführen, wenn gewisse Bedingungen erfüllt sind.  Zudem ist es für die collectors combine, concat, equalsFilter, square, tuples, choose, range und group möglich, mittels &amp;lt;postprocess&amp;gt; Literal-Funktionen auf das Ergebnis anzuwenden. Beispiel:</description>
    </item>
    
    <item>
      <title>Ausgabesteuerung</title>
      <link>https://sschuepbach.github.io/metamorph-hacks/collectors/ausgabesteuerung/</link>
      <pubDate>Fri, 10 Aug 2018 22:24:00 +0200</pubDate>
      
      <guid>https://sschuepbach.github.io/metamorph-hacks/collectors/ausgabesteuerung/</guid>
      <description>Wann und wie collectors die gesammelten Werte weiterschicken, kann mit Hilfe von drei Parametern definiert werden: flushWith, reset und sameEntity.
flushWith definiert den Zeitpunkt, zu welchem der collector die Werte abschickt (flush). Dies kann entweder nach der Verarbeitung eines bestimmten Feldes (flushWith=&amp;quot;feldname&amp;quot;, Wildcards erlaubt) oder des gesamten Datensatzes sein (flushWith=&amp;quot;record&amp;quot;). Im Fall von combine, entity, equalsFilter sowie den Quantoren all, any und none werden die gesammelten Werte standardmässig weitergeleitet, sobald für jedes Feld ein Wert vorhanden ist.</description>
    </item>
    
    <item>
      <title>if-Anweisungen</title>
      <link>https://sschuepbach.github.io/metamorph-hacks/collectors/if-anweisungen/</link>
      <pubDate>Mon, 13 Aug 2018 15:53:00 +0200</pubDate>
      
      <guid>https://sschuepbach.github.io/metamorph-hacks/collectors/if-anweisungen/</guid>
      <description>Mithilfe von if-Anweisungen lässt sich steuern, ob ein collector Werte ausgibt oder nicht. Die Syntax sieht folgendermassen aus:
&amp;lt;combine name=&amp;#34;ausgabe&amp;#34; value=&amp;#34;${a}+${b}&amp;#34;&amp;gt; &amp;lt;if&amp;gt; &amp;lt;data source=&amp;#34;feldA&amp;#34;&amp;gt; &amp;lt;equals string=&amp;#34;wertA&amp;#34;/&amp;gt; &amp;lt;/data&amp;gt; &amp;lt;/if&amp;gt; &amp;lt;data source=&amp;#34;feldA&amp;#34; name=&amp;#34;a&amp;#34;/&amp;gt; &amp;lt;data source=&amp;#34;feldB&amp;#34; name=&amp;#34;b&amp;#34;/&amp;gt; &amp;lt;/combine&amp;gt; Wenn der Wert im feldA tatsächlich wertA ist, dann wird das Ergebnis von ${a}+${b} ausgegeben, ansonsten nicht.
In der if-Anweisung lässt sich jede Filter-Funktion sowie die collectors all, any und none verwenden. Ein Beispiel mit all:</description>
    </item>
    
  </channel>
</rss>